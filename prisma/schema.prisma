// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// model User {
//   id       Int       @id @default(autoincrement())
//   email    String    @unique
//   name     String?
//   articles Article[]
// }

// model Article {
//   id       Int     @id @default(autoincrement())
//   title    String
//   body     String?
//   author   User    @relation(fields: [authorId], references: [id])
//   authorId Int
// }

// model User {
//   id        String @id @default(uuid())
//   firstName String
//   lastName  String
//   age       Int

//   houseOwned House[] @relation("HouseOwner")
//   houseBuilt House[] @relation("HouseBuilder")

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model House {
//   id      String  @id @default(uuid())
//   address String  @unique
//   state   String?

//   ownerId String
//   owner   User   @relation("HouseOwner", fields: [ownerId], references: [id])

//   builderId String
//   builder   User   @relation("HouseBuilder", fields: [builderId], references: [id])

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model User {
  id String @id @default(cuid())

  name  String
  email String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile?
  Order     Order[]
}

model Profile {
  id   String @id @default(cuid())
  name String

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(cuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   Product[]
}

model Category {
  id String @id @default(cuid())

  name String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Product {
  id String @id @default(cuid())

  name        String
  description String
  price       Int

  category Category[]

  order Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
